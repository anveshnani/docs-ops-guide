---
title: Providing a Certificate for your SSL Termination Point
owner: RelEng
---

<strong><%= modified_date %></strong>

This topic describes the procedure for providing [Pivotal Cloud Foundry](https://network.pivotal.io/products/pivotal-cf) (PCF) Elastic Runtime 
with an SSL certificate, as part of the process of configuring Elastic Runtime for deployment. 
See the [Getting Started with Pivotal Cloud Foundry ](../installing/index.html) topic for help installing PCF on your IaaS of choice.

This topic provides two procedures. Choose the correct procedure for your environment type:

* For a production environment, follow [Configure for a Production Deployment](#prod).
* For a testing or development environment, follow [Configure for a Development or Testing Deployment](#dev). This procedure includes how to generate an RSA certificate suitable for a non-production environment.

<p class="note"><strong>Note</strong>: Certificates generated in Elastic Runtime are signed by the Ops Manager Certificate Authority. They are not technically self-signed, but they are sometimes referred to as "Self-Signed Certificates" in the Ops Manager UI and throughout this documentation.</p>

## <a id="prod"></a>Configure for a Production Deployment

1. Navigate to the Ops Manager Installation Dashboard.

1. Click the **Elastic Runtime** tile in the Installation Dashboard.

1. Click **Networking**.

1. If your deployment uses an external load balancer that can forward encrypted traffic to the router, do the following:

  1. Under **Select one of the following point-of-entry options**, select the first option, **Forward SSL to Elastic Runtime Router**.
  2. Enter your PEM encoded certificate and your PEM encoded private key in the fields under **Router SSL Termination Certificate and Private Key**.
  If your deployment is on AWS, this certificate must match the one that you uploaded to AWS earlier in the
  [Upload an SSL Certificate](../customizing/cloudform-template.html#upload-cert) section of the 
  [Deploying the CloudFormation Template for PCF on AWS](../customizing/cloudform-template.html) topic.
  3. If you want to use a specific set of SSL ciphers for the Router, configure **Router SSL Ciphers**. Enter a colon-separated list of custom SSL ciphers to pass to the router. Otherwise, leave this field blank.
  4. Skip to [step 6](#save).
    <%= image_tag("ssl-termination-router.png") %>

1. If you use HAProxy and not your own load balancer as the first point-of-entry, do the following:

  1. Under **Select one of the point-of-entry-options**, select the third option, **Forward SSL to HA Proxy**.
  2. Enter your PEM encoded certificate and your PEM encoded private key in the fields under **SSL Certificate and Private Key**.
  If your deployment is on AWS, this certificate must match the one that you uploaded to AWS earlier in the
  [Upload an SSL Certificate](../customizing/cloudform-template.html#upload-cert) section of the 
  [Deploying the CloudFormation Template for PCF on AWS](../customizing/cloudform-template.html) topic.
  3. If you want to use a specific set of SSL ciphers for HAProxy, configure **HAProxy SSL Ciphers**. Enter a colon-separated list of custom SSL ciphers to pass to HAProxy. Otherwise, leave this field blank.
  4. If you want HAProxy to only allow HTTPS traffic, select **Disable HTTP traffic to HAProxy**.
    <%= image_tag("ssl-termination.png") %>
1. <a id="save"></a>Click **Save**.

## <a id="dev"></a>Configure for a Development or Testing Deployment

1. Navigate to the Ops Manager Installation Dashboard.

1. Click the **Elastic Runtime** tile in the Installation Dashboard.

1. Click **Networking**.

1. If your deployment uses an external load balancer that can forward encrypted traffic to the router, do the following:

  1. Under **Select one of the point-of-entry-options**, select the first option, **Forward SSL to Elastic Runtime Router**.
  2. Enter your PEM encoded certificate and your PEM encoded private key in the fields under **Router SSL Termination Certificate and Private Key**.
  If your deployment is on AWS, this certificate must match the one that you uploaded to AWS earlier in the
  [Upload an SSL Certificate](../customizing/cloudform-template.html#upload-cert) section of the 
  [Deploying the CloudFormation Template for PCF on AWS](../customizing/cloudform-template.html) topic.
  3. Click **Generate RSA Certificate** to populate the **Router SSL Termination Certificate and Private Key** fields with RSA certificate and private key information. Enter your system and app domains in wildcard format. Optionally, also add custom domains in wildcard format. 
    You can generate a single certificate for two domains separated by a comma, such as `*.apps.EXAMPLE.com, *.system.EXAMPLE.com`. 
    <%= image_tag("generate-cert.png") %>
    <p class="note"><strong>Note</strong>: SSL certificates generated for wildcard DNS records only work for a single domain name component or component fragment. For example, a certificate generated with <code>\*.EXAMPLE.com</code> does not work for <code>apps.EXAMPLE.com</code> and <code>system.EXAMPLE.com</code>. The certificate must have both <code>apps.EXAMPLE.com</code> and <code>system.EXAMPLE.com</code> attributed to it. </p>
  4. If you want to use a specific set of SSL ciphers for the Router, configure **Router SSL Ciphers**. Enter a colon-separated list of custom SSL ciphers to pass to the router. Otherwise, leave this field blank.
  4. Skip to [step 6](#save).

      <%= image_tag("ssl-termination-router.png") %>

  5. Skip to [step 6](#disablessl).

1. If you use HAProxy and not your own load balancer as the first point-of-entry, do the following:

  1. Under **Select one of the point-of-entry-options**, select the third option, **Forward SSL to HA Proxy**.
  2. Enter your PEM encoded certificate and your PEM encoded private key in the fields under **SSL Termination Certificate and Private Key**.
  If your deployment is on AWS, this certificate must match the one that you uploaded to AWS earlier in the
  [Upload an SSL Certificate](../customizing/cloudform-template.html#upload-cert) section of the 
  [Deploying the CloudFormation Template for PCF on AWS](../customizing/cloudform-template.html) topic.
  3. If you want to use a specific set of SSL ciphers for HAProxy, configure **HAProxy SSL Ciphers**. Enter a colon-separated list of custom SSL ciphers to pass to HAProxy. Otherwise, leave this field blank.
  1. If you want HAProxy to only allow HTTPS traffic, select **Disable HTTP traffic to HAProxy**.
    <%= image_tag("ssl-termination.png") %>

1. <a id="disablessl"></a>If you are not using SSL encryption or if you are using self-signed certificates, you can select **Disable SSL certificate verification for this environment**. Selecting this checkbox also disables SSL verification for route services. Use this checkbox only for development and testing environments. Do not select it for production environments.

1. Click **Save**.

